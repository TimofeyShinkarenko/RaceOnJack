class Game
{
    // Ждём пока пользователь нажмёт Enter, чтобы начать игру
    method void StartGame () 
    {
        do Layout.PrintSplashScreen();

        var char pressedKey;
        let pressedKey = Keyboard.keyPressed();

        while (pressedKey = 0)
        {
            let pressedKey = Keyboard.keyPressed();
        }

        return;
    }

    field Score Score;
    field Car MyCar;
    field Array Obstacls;
    field int CurrentTick;
    field int TickTime;
    field int MinTickTime;
    field int NumberOfObstacls;


    constructor Game()
    {
        let TickTime = 1000;
        let Score = Score.new();
        let CurrentTick = 0;
        let MinTickTime = 100;
        let NumberOfObstacls = 10;

        var Possition startPossitonossition;
        let startPossitonossition = Possition.new(128, 128);
        let Car = Car.new(startPossitonossition);

        let Obstacls = Array.new(NumberOfObstacls);
        // Заполнить массив препятствиями

        return this;
    }

    method boolean CheckAlive()
    {
        var boolean IsCarAlive;
        let IsCarAlive = true;

        var int i;
        let i = 0;
        while (i < NumberOfObstacls)
        {
            if (MyCar.CurrentPossition.Equal(obstacls[i].CurrentPossition))
            {
                return false;
            }
        }

        return true;
    }

    method void MoveObstacls()
    {
        var int i;
        let i = 0;
        while (i < NumberOfObstacls)
        {
            do obstacls[i].ChangePossitionForTickTime();
        }

        return;
    }

    method void Play()
    {
        var boolean carAlive;
        var carAlive = true;

        while (carAlive = true)
        {
            do Sys.wait(TickTime);
            do Layout.PrintCurrentState(MyCar, Obstacls, Score, NumberOfObstacls);
            do CurrentScore.AddScoreForTickTime();
            if (TickTime > MinTickTime)
            {
                let TickTime = TickTime - 50;
            }

            do MyCar.ManagedDirection();
            let carAlive = CheckAlive();
        }

        do Layout.PrintLoseScreen();

        return;
    }

    method void Restart()
    {
        var char keyUser;
        let key = Keyboard.keyPressed();
        while (key = 0)
        {
            if (key = 140)
            {
                do Sys.halts();
            }
            if (key = 128)
            {
                return;
            }
        }

        return;
    }
}