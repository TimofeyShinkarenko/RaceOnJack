class Obstacle 
{
    field Possition CurrentPossition;
    field int Type;

    constructor Obstacle new(Possition startPossition, int type)
    {
        let CurrentPossition = startPossition;
        let Type = type;

        return this;
    }

    // Вывод данного экземпляра препятствия
    method void PrintThisObstacle () 
    {
        do ObstacleTexture.PrintObstacle(Type);

        return;
    }

    method void ChangePossitionForTickTime()
    {
        do CurrentPossition.VectorChangePossition(0, 8);

        return;
    }

    method Possition GetCurrentPossition()
   {
      return CurrentPossition;
   }

   method int GetType()
   {
      return Type;
   }

   method void dispose()
   {
      do Memory.deAlloc(this);

      return;
   }
}