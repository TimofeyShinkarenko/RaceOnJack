class Position
{
    field int X;
    field int Y;
   
    constructor Position new(int x, int y)
    {
        let X = x;
        let Y = y;

        return this;
    }

    method void VectorChangePosition (int x, int y) 
    {
        let X = X + x;
        let Y = Y + y;

        return;
    }

    method int GetY()
    {
        return Y;
    }

    method int GetX()
    {
        return X;
    }

    method boolean Equal(Position other)
    {
        if (other.GetX() = X & other.GetY() = Y)
        {
            return true;
        }

        return false;
    }

    method void dispose()
    {
        do Memory.deAlloc(this);

        return;
    }

    method boolean IsUnder(Position other)
    {
        if (other.GetY() < Y)
        {
            return true;
        }

        return false;
    }

    method int GetLocation()
    {
        var int location;
        let location = (X / 16) + (Y * 32);

        return location;
    }
}