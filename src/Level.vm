function Level.new 0
    push constant 3
    call Memory.alloc 1
    pop pointer 0
    call Fibonachi.new 0
    pop this 0
    push constant 0
    pop this 1
    push constant 1
    pop this 2
    push pointer 0
    return
function Level.CreateLevel 3
    push argument 0
    pop pointer 0
    push constant 0
    pop local 2
    push argument 1
    call Array.new 1
    pop local 0
label Level_0
    push local 2
    push argument 1
    lt
    not
    if-goto Level_1
    push pointer 0
    push argument 2
    call Level.GenerateNewObstacle 2
    pop local 1
    push local 2
    push local 0
    add
    push local 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push local 2
    push constant 1
    add
    pop local 2
    goto Level_0
label Level_1
    push local 0
    return
function Level.SetTick 0
    push argument 0
    pop pointer 0
    push argument 1
    pop this 1
    push constant 0
    return
function Level.GenerateNewObstacle 4
    push argument 0
    pop pointer 0
    push this 0
    call Fibonachi.GetNextValue 1
    push constant 5
    add
    pop local 1
    push local 1
    push constant 3
    call MathExtension.mod 2
    pop local 3
    push this 1
    push local 1
    push argument 1
    push constant 2
    call Math.multiply 2
    push constant 3
    call Math.divide 2
    call MathExtension.mod 2
    add
    pop this 1
    push local 3
    push this 2
    eq
    not
    if-goto Level_3
    push this 2
    push constant 1
    add
    push constant 3
    call MathExtension.mod 2
    pop local 3
    goto Level_2
label Level_3
label Level_2
    push local 3
    push constant 48
    call Math.multiply 2
    push constant 192
    add
    push constant 0
    call Possition.new 2
    pop local 2
    push local 2
    push local 1
    push constant 2
    call Math.multiply 2
    push constant 1
    sub
    push constant 3
    call MathExtension.mod 2
    push this 1
    call Obstacle.new 3
    pop local 0
    push local 3
    pop this 2
    push local 0
    return
function Level.dispose 0
    push argument 0
    pop pointer 0
    push pointer 0
    call Memory.deAlloc 1
    pop temp 0
    push constant 0
    return