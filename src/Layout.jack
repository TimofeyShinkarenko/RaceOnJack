class Layout
{
    /*field String helloMessage;
    field String loseMessage;

    constructor Layout new()
    {
        let helloMessage = "Press anything to start!";
        let loseMessage = "Press Enter to restart or ESC to escape.";

        return this;
    }*/

    function void PrintSplashScreen () 
    {
        // Выводим на экран заставку: "Press Enter to start!"
        var String helloMessage;
        let helloMessage = "Press anything to start!";
        do Output.moveCursor(9, 16);
        do Output.printString(helloMessage);
        return;
    }
    function void HideSplashScreen()
    {
        /*do Memory.deAlloc(helloMessage);*/
        var String nothing;
        let nothing = "                         ";
        do Output.moveCursor(9, 16);
        do Output.printString(nothing);
        do Output.moveCursor(9, 16);
        return;
    }

    function void PrintField() 
    {
        // Тут будет полная отрисовка поля:
        // Граница поля, боковые панели, но не часть с трассой
        /*
        do Screen.drawLine(87, 17, 424, 17);
        do Screen.drawLine(87, 237, 424, 237);

        do Screen.drawLine(87, 17, 87, 237);
        do Screen.drawLine(424, 17, 424, 237);

        do Screen.drawLine(179, 17, 179, 237);
        do Screen.drawLine(356, 17, 356, 237);*/
        do Screen.drawLine(183, 0, 183, 256);
        do Screen.drawLine(328, 0, 328, 256);
        return;
    }

    function void PrintLoseScreen (Score score) 
    {
        var String loseMessage;
        let loseMessage = "Press Enter to restart or ESC to escape.";

        do score.PrintCurrentScore();
        // Выводим на экран заставку: "Press Enter to restart or ESC to escape."
        do Output.printString(loseMessage);
        return;
    }

    function void PrintCurrentState(Car car, Array obstacls, Score score, int length, int currentSpeed)
    {
        var int i;
        var Obstacle obstacle;
        var Possition position;
        var int location;
        let position = car.GetCurrentPossition();
        let location = position.GetLocation();
        let i = 0;

        do car.PrintCar();
        do score.PrintCurrentScore();
        do Layout.PrintSpeed(currentSpeed);
        while (i < length)
        {  
            let obstacle = obstacls[i];
            do obstacle.PrintThisObstacle();
            let i = i + 1;
        }
        return;
    }

    function void PrintSpeed(int speed)
    {
        var String speedMessage;
        let speedMessage = "Speed:";
        do Output.moveCursor(13, 45);
        do Output.printString(speedMessage);
        do Output.printInt(speed);
        return;
    }
}